---
- hosts: localhost
  gather_facts: no

  vars_prompt:

  - name: vcenter_username
    prompt: Enter the vcenter username
    private: no

  - name: vcenter_password
    prompt: Enter the vcenter password
    private: yes

  - name: vm_name
    prompt: Enter the VM name, use the naming convention
    private: no

  - name: port_group
    prompt: Please specify the port group (either VLAN 10 - Secure LAN or VLAN 20 - DMZ)
    private: no

  - name: vm_ip
    prompt: Enter the IP address for the VM
    private: no

  - name: gateway
    prompt: Please specify the gateway according to the specified port group
    private: no



  tasks:

  - set_fact: 
      vm_name: "{{ vm_name }}"
  - set_fact:
      vm_ip: "{{ vm_ip }}"

  - name: Clone the template
    vmware_guest:
      hostname: "192.168.1.3"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: False
      name: "{{ vm_name }}"
      template: ubuntu18
      datacenter: "ESXi laboppl"
      folder: /{{ port_group }}
      datastore: "laboppl1"
      networks:
      - name: "{{ port_group }}"
        ip: "{{ vm_ip }}"
        netmask: 255.255.255.0
        gateway: "{{ gateway }}"
        type: static
        mac: "{{ '00:50:06' | random_mac }}"
      customization:
        hostname: "{{ vm_name | regex_search('^[^\\s]+') }}"
        dns_servers:
          - 10.0.10.1
      state: poweredon
      wait_for_ip_address: yes
    delegate_to: localhost

  - name: add to /etc/ansible/hosts file
    blockinfile:
      path: /etc/ansible/hosts
      state: present
      marker: ""
      block: |
        #{{ vm_name }}
        {{ vm_ip }}
    delegate_to: localhost

  - name: accept new ssh fingerprints
    shell: ssh-keyscan "{{ vm_ip }}" >> /home/ansible/.ssh/known_hosts
    delegate_to: localhost

- hosts: "{{ hostvars['localhost']['vm_ip'] }}"
  become: yes
  become_method: sudo

  tasks:

    - name: Join host to the domain
      shell: echo "{{ password }}" | realm join --user=pployet --computer-ou=OU=servers,DC=LABOPPL,DC=HOME laboppl.home --install=/
      ignore_errors: yes

    - name: Edit sssd config file
      lineinfile:
        path: /etc/sssd/sssd.conf
        state: present
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: ^realmd_tags = manages-system joined-with-adcli$, line: realmd_tags = manages-system joined-with-samba }
        - { regexp: ^use_fully_quallified_names = False$, line: use_fully_qualified_names = False }
        - { regexp: ^fallback_homedir = /home/%u@%d$, line: fallback_homedir = /home/%u }
        - { regexp: ^access_provide = ad$, line: access_provider = simple }


    - name: Change sssd config file permissions
      file:
        path: /etc/sssd/sssd.conf
        mode: '0600'


    - name: Restart sssd service
      systemd:
        name: sssd
        state: restarted


- hosts: "10.0.10.3"
  become: yes
  become_method: sudo

  tasks:

   - name: Add the conf for the new host to the supervision server
     blockinfile:
       path: /etc/icinga2/conf.d/linux_hosts.conf
       state: present
       block: |
        object Host "{{ hostvars['localhost']['vm_name'] }}" {
         import "generic-host"
         address = "{{ hostvars['localhost']['vm_ip'] }}"
         vars.os = "Linux"
        }

   - name: Reload icinga2 service
     systemd:
       name: icinga2
       state: restarted

